["Brandeis Consulting Calculation Views Grundlagen Überblick, Entwicklungsumgebung und erste Beispiele ","Brandeis Consulting Calculation Views und HANA-Modellierung - Motivation Calculation Views - Grundlagen 3 • SAP HANA • In-Memory-Architektur erlaubt performante Ausführung von datenintensiven Operationen (bsp. Aggregation oder Verknüpfung von Daten) • Reporting und Auswertungen mit virtuellen Modellen (Views) auf Rohdaten oder aufbereiteten Daten • Modellierungstechniken • SQLScript: codebasierter Ansatz (Prozeduren, Tabellenfunktionen) • Calculation Views: grafischer Ansatz (virtuelle Modelle) • HANA CDS: eigene Syntax für Definition von persistenten Modellen und Views ","Brandeis Consulting Anwendungsszenario : HANA native Reporting Calculation Views - Grundlagen BW/4 S/4 Non-SAP / Data Lake HANA Calculation Views Frontend Report 1 Web IDE Report n … 4 ","Brandeis Consulting Anwendungsszenario 2: Integration mit SAP BW (on HANA / BW/4) Calculation Views - Grundlagen HANA BW - Reporting Composite Provider BW – Persistent layer Infoobjects ADSOs external Views Calculation Views 5 HANA Reporting Calculation Views ","Brandeis Consulting Modellierungs-Objekte in SAP HANA •Entwicklungsartefakt •Definiert die Metadaten, Struktur und Verhalten eines Objektes in der HANA •Entwicklung in Web IDE •Grafische Modellierung (Calculation View oder Flowgraph) •Textbasiert (Tabellendefinition, CDS-Entität, Prozedur) •Verwaltet über Git-Repository •lokal in Web IDE •Zentrales Unternehmens-Repository •Online in Github Design-Time-Objekte •Werden aus Design-Time-Objekten durch Build/Deployment erzeugt •Entsprechen aktiven Objekten in der HANA •Halten persistente Daten (Tabelle, CDS-Entität) •Werden ausgeführt (View, Flowgraph, Prozedur) Laufzeitobjekte • Beispiel: • HANA-Tabelle • Design-Time-Objekt: • hdbtable-Datei => Enthält Definition von Tabelle (DDL- Syntax) • Laufzeitobjekt: Aktive Tabelle in einem Datenbank-Schema • Calculation View • Design-Time-Objekt: • .hdbcalculationview-Datei => XML-Datei. Grafisch dargestellt in Editor • Laufzeitobjekt: Column View in HANA Calculation Views - Grundlagen 6 ","Brandeis Consulting Werkzeuge für SAP HANA Calculation Views - Grundlagen 7 • Web IDE • Modellierungstools für Design-Time-Objekte • Eigene Editoren für spezifische Objekte (z.B. grafischer Calculation-View- Editor) • Integration von Github • Database Explorer • Anzeige und Ausführung der Laufzeitobjekte • Schema, Tabellen, Views anzeigen • SQL-Konsole • Öffnen über Database Explorer • Ausführen eigener SQL-Abfragen und SQLScript auf den Laufzeitobjekten ","Brandeis Consulting Tabellendefinition .hdbtable • Modellierung einer HANA-Tabelle • Spaltendefinition: Name, Typ, Kommentar • Primärschlüssel • Bedingungen (Fremdschlüssel, NOT NULL) • Build => Erzeuge aktives Objekte in Entwicklungssystem • Automatisches Befüllen von Tabellen: .hdbtabledata • Import von CSV-Dateien Calculation Views - Grundlagen 8 ","Brandeis Consulting Tabellendefinition: Beispiel TASKS.hdbtable • Tabelle: TASKS • Erstelle hdbtable-Datei TASKS in Web IDE • Build: Laufzeitobjekt TASKS erzeugen • Absprung in Database Explorer: • Öffne HDI Container (Rechtsklick) • Ausführen von SQL-Statement in SQL-Konsole Calculation Views - Grundlagen 9 ","Brandeis Consulting Demo / Übung Web IDE • Aufruf Web IDE • Klone Github-Repository • https://github.com/captainabap/SQLScript_for_SAP_HANA_HDI • Klont ein HANA-Projekt • Tabellendefinition: TASKS.hdbtable • Build • HDI Container öffnen • Datenvorschau • SQL Konsole Calculation Views - Grundlagen 10 ","Brandeis Consulting Grundlage für die Übungen: Das Demodatenmodell Calculation Views - Grundlagen 11 ","Brandeis Consulting Calculation Views Modellierung •Grafische Modellierung •Operationen: Join, Union, Aggregation, etc. •Virtuelle Felder: Formeln, SQL-Ausdrücke •Einbinden von SQLScript (via Tabellenfunktionen) Semantik für das Reporting •Merkmale und Kennzahlen definieren • Semantische Modellierung: Währungsbezug, Texte für Schlüssel • Eingabe/-variablen und –parameter: Filterung und dynamische Berechnung Calculation Views - Grundlagen 12 ","Brandeis Consulting Kategorie von Calculation Views: Dimension vs Cube Views Calculation Views - Grundlagen Dimension Views: • Dimensionen modellieren für Berichte (Schlüssel + Attribute) • Verknüpfung von Stammdaten aus verschiedenen Tabellen, Texte modellieren • Enthalten nur Merkmale (auch virtuelle) • Virtuelles Analogon zu Infoobjekten im BW mit Stammdaten Cube Views: • Enthalten Kennzahlen und Merkmale • Berechnete/eingeschränkte Kennzahlen • Aggregation der Kennzahlen • Einbinden von Dimension Views als Dimensionen • Werden im Reporting als Informationsmodelle verwendet 13 ","Brandeis Consulting Merkmale und Kennzahlen am Beispiel des Demo-Datenmodell Merkmale (Tabelle TASKS) • Merkmale (Bsp. Aufgabe) • ID • Projekt • Titel • Status • Final, Offen • Bearbeiter • Team des Bearbeiters • Merkmale können • In Filtern verwendet werden • Als Aggregationsebene verwendet werden • Als Aufriss verwendet werden • Bilden die Dimensionen der OLAP-Cubes Kennzahlen (Tabelle TASKS) • Kennzahlen (Bsp. Aufgabe) • PLAN_AUFWAND • IST_AUFWAND • FERTIGSTELLUNG • Kennzahlen können • Aggregiert werden • Eingeschränkt werden auf Merkmale • Aufwand aller offenen Aufgaben • Aufwand aller fälligen Aufgaben • Berechnet werden • Rest_Aufwand = PLAN – IST • Kennzahlen bilden die Zellen der OLAP-Cubes Calculation Views - Grundlagen 14 ","Brandeis Consulting Beispiel im System Calculation Views - Grundlagen • Demo und Übung: • Demodatenmodell öffnen • Anlage eines Cube Views 15 ","Brandeis Consulting Recap: Semantik-Knoten Calculation Views - Grundlagen • Oberster Knoten => Semantik-Knoten • Welche Spalten sind Merkmale, welche Kennzahlen? • Alias und beschreibenden Text für Spalten vergeben • Eindeutiger Schlüssel definieren • Textspalten zuordnen zu Schlüsselspalten ( Kundennummer -> Kundenname) 16 ","Brandeis Consulting Core Data Services • Spezifische Syntax zur Definition von Datenmodellen (DDL) • Entitäten (persistente Objekte): TEAM, USER • Views • Assoziationen (logische Joins) • Datentypen, Strukturen • Use-Case HANA-native Applikationen: XSA-Applikationen, CAPM • Wird verwendet um eigene persistente Modelle zu definieren • Grafischer Editor oder textbasierter Editor Calculation Views - Grundlagen 17 ","Brandeis Consulting Core Data Services - Beispiel Calculation Views - Grundlagen 18 Entität: E_USER E_TEAM View: V_USER_TEAM ","Brandeis Consulting Neuerungen mit HANA 2.0 Calculation Views - Grundlagen 19 • Entwicklung in der Web IDE statt Eclipse • Verwaltung des Quellcodes über Git-Repository • Neue Konzepte • Container • Spaces • Entwicklungsobjekte sind entkoppelt von Laufzeitobjekten • Eine HANA-Applikation kann mehrfach kompiliert werden in verschiedene Schemata/Container • Zugriff auf bestehende Schemata, Tabellen über Synonyme und externe Services ","Brandeis Consulting HDI Container und Spaces • HDI Container • Virtuelle Laufzeitumgebung in einem HANA-System • Entspricht einem Schema für die erzeugten Datenbankobjekte • Hier sind die Tabellen, Views, Prozeduren definiert • Zugehörige weitere technische Schemata • API-Prozeduren für das Erstellen, Aktualisieren von Objekten • API-Prozeduren für Berechtigungen • Technische User: • Application_User • Owner • Zugriffsrollen: Access, Owner • Space: • Definiert eine Umgebung auf einem HANA-System • Enthält die HDI-Container • Jeder Space wird einem HANA-System zugewiesen • Mehrere Spaces auf einem System möglich Calculation Views - Grundlagen 20 ","Brandeis Consulting HDI Container – Build in der Entwicklungsumgebung Calculation Views - Grundlagen 21 • Ziel-Space für HANA-Applikation muss in den Projekteinstellungen definiert werden • Web IDE: Kontextmenu -> Build: • Erstellt eine eigene Umgebung (HDI Container) für jeden Entwickler • Laufzeitobjekte werden in diesem (user-spezifischen) Container erstellt • Jeder Entwickler arbeitet in seinem eigenen Container (eigene Tabellen, Views, etc.) • Synchronisieren der Entwicklung über Git-Repository ","Brandeis Consulting Space: Development HDI Container – Build in der Entwicklung Calculation Views - Grundlagen 22 Lokaler Container (User spezifisch) Web IDE Zentrales Git-Repository Lokales Repository (User spezifisch) Database Explorer Commit/Push Pull/Fetch HANA-Datenbank Entwicklungssystem BUILD ","Brandeis Consulting HDI Container - Deployment • Deployment: Ausliefern der Entwicklungen in einem gemeinsamen Container in verschiedenen Spaces • Automatisierte Ausführung oder zentrale Steuerung • CI Space: Integrationstest für Entwicklungen • CI = Continuous Integration • Prüfen, ob sich die gemeinsamen Entwicklungen aktivieren lassen • Technische, automatisierte Tests • Quality / Test space: Fachlicher Test mit produktionsnahen Daten • Production space: Produktives System, Zugriff durch Anwender Calculation Views - Grundlagen 23 ","Brandeis Consulting Space: Produktion Space: QA (Quality Assurance) HDI Container – Deployment – Beispiel- Landschaft Calculation Views - Grundlagen 24 Zentrales Git-Repository Container für fachlichen Test Container für Produktion Deployment Release Automatic Build Space: CI (Continuous Integration) Container für Integrationstest Vgl. P 136 - Commit von Entwicklungen ","Brandeis Consulting HDI Container – Zugriff auf bestehende Tabellen Calculation Views - Grundlagen 25 • HDI Container enthält Tabellen, Calculation Views, Prozeduren etc., die als Design-Time-Objekte definiert wurden • Bereits vorhandene Tabellen in anderen Schemata sind zunächst nicht sichtbar für Modellierungsobjekte • Zugriff wird eingerichtet über • External service: Zugriff auf klassisches Datenbank-Schema (Bsp. ABAP- Schema für S/4, BW, Remote-Source) • HDI service: Zugriff auf andere HDI-Container • Synonym-Definition: Externe Objekte dürfen nicht direkt benutzt werden, sondern es muss ein Synonym definiert werden ","Brandeis Consulting HDI Container – Zugriff auf bestehende Tabellen 26 Calculation View TASKS HDI Container A USERS Tabellen Synonym A HDI Container B TABLE B User-provided Service Technischer User mit SELECT, GRANT SELECT- Berechtigung für TABLE A Synonym B Externes Schema (z.B. SAPABAP) TABLE A HDI Service Access Role Container B Owner von HDI Container A ","Brandeis Consulting Wichtige Konzepte Calculation Views - Grundlagen • Web IDE • HANA 1.0 vs. 2.0 • Design-Time- vs Laufzeit-Objekte • Code-Verwaltung über Git Repository • Container-basiertes Build und Deployment • Calculation Views • Dimension vs. Cube View • Kennzahlen und Merkmale 27 ","Brandeis Consulting Grafische Calculation Views – Key-Takeaway Calculation Views - Grundlagen • Was sind Calculation Views • Einsatzgebiete • Entwicklungsumgebung und grafische Modellierung • Cube und Dimension Views ▪ Literatur: ▪ Buch „SAP HANA 2.0 – Certification Guide“ ▪ Kapitel 5, 6 und Kapitel 4 ▪ SAP HANA Modelling Guide: https://help.sap.com/docs/SAP_HANA_PLATFORM/e8e6c8142e60469bb401de5fdb6f7c00/509d ce3fd6f44a839e9c0ae83dc62d04.html?locale=en-US 28 ","Brandeis Consulting Fragen? Calculation Views - Grundlagen 32 ","Brandeis Consulting Backup Calculation Views - Grundlagen 33 "]
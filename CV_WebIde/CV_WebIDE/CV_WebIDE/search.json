["Brandeis Consulting Calculation Views Vertiefung Modellierung mit XSA vs. Eclipse ","Brandeis Consulting Neuerungen mit HANA 2.0 Calculation Views - Grundlagen 2 • Entwicklung in der Web IDE als Alternative zu Eclipse • Verwaltung des Quellcodes über Git-Repository • Neue Konzepte • Container • Spaces • Entwicklungsobjekte sind entkoppelt von Laufzeitobjekten • Eine HANA-Applikation kann mehrfach kompiliert werden in verschiedene Schemata/Container • Zugriff auf bestehende Schemata, Tabellen über Synonyme und externe Services ","Brandeis Consulting HDI Container und Spaces • HDI Container • Virtuelle Laufzeitumgebung in einem HANA-System • Entspricht einem Schema für die erzeugten Datenbankobjekte • Hier sind die Tabellen, Views, Prozeduren definiert • Zugehörige weitere technische Schemata • API-Prozeduren für das Erstellen, Aktualisieren von Objekten • API-Prozeduren für Berechtigungen • Technische User: • Application_User • Owner • Zugriffsrollen: Access, Owner • Space: • Definiert eine Umgebung auf einem HANA-System • Enthält die HDI-Container • Jeder Space wird einem HANA-System zugewiesen • Mehrere Spaces auf einem System möglich Calculation Views - Grundlagen 3 ","Brandeis Consulting Space: Development HDI Container – Build in der Entwicklung Calculation Views - Grundlagen 4 Lokaler Container (User spezifisch) Web IDE Zentrales Git-Repository Lokales Repository (User spezifisch) Database Explorer Commit/Push Pull/Fetch HANA-Datenbank Entwicklungssystem BUILD ","Brandeis Consulting HDI Container – Zugriff auf bestehende Tabellen 5 Calculation View TASKS HDI Container A USERS Tabellen Synonym A HDI Container B TABLE B User-provided Service Technischer User mit SELECT, GRANT SELECT- Berechtigung für TABLE A Synonym B Externes Schema (z.B. SAPABAP) TABLE A HDI Service Access Role Container B Owner von HDI Container A ","Brandeis Consulting Neue (erweiterte) Funktionen - Überblick • Join von zwei oder mehr Datenquellen • Komplexe JOIN-Bedingungen • Tabellenfunktionen mit tabellarischen Eingabeparametern • Generierung und Navigation in Hierarchien • Verarbeitung von Geodaten und Graph-Daten Dimension Views und Knotentypen ","Brandeis Consulting Join-Knoten • Join von zwei oder mehr Datenquellen • Zwei Knotentypen: • Equi Join • Einfache JOIN-Bedingung: Immer mit = • Non Equi Join (neu mit Web IDE) • Komplexe JOIN-Bedingung (=, <>, <=, >=) • oder direkt als SQL-Ausdruck modellieren • Begriff: Theta-Join • Join mit mehr als zwei Datenquellen (Multi Join): • Bei Bedarf Reihenfolge der Ausführung festlegen (wichtig bei Kombination von Outer und Inner Join) Dimension Views und Knotentypen ","Brandeis Consulting Tabellenfunktionen –Tabellarische Input-Parameter Neuer Knotentyp Table Function - Erlaubt Verwendung von Tabellenfunktionen mit tabellarischen Eingabeparametern Ausgabespalten im Reiter Columns: ","Brandeis Consulting Tabellenfunktionen - 2 - Neuer Projektionsknoten mit Datenquelle TASKS - Eingangsknoten für Knoten TableFunction: Projection_1 - Spalten des Eingangsknoten können auf Spalten des Input-Parameter der Tabellenfunktion gemappt werden - Reiter Input Mapping Mappen der tabellarischen Input-Parameter mit Vorgängerknoten ","Brandeis Consulting Hierarchie-Funktionen in Calc Views Hierarchien • Knotentyp Hierarchy Function • Zwei Funktionsweisen: • Generation: Erstelle Hierarchie aus Datenquelle • Input: flache Tabelle mit Parent-/Child-Relation oder Level-Darstellung • Navigation: Navigiere in Hierarchie • Input: Generierte Hierarchie + Datenquelle zur Filterung • Wird verwendet um Knoten aus einer Hierarchie auszuwählen: • Vorgänger-/Nachfolger oder auf gleicher Ebene ","Brandeis Consulting Hierarchie-Knoten – Modus Generation • Knotentyp Hierarchy Function – Modus Generation • Erzeugt eine Parent-/Child-Hierarchie • Eine Datenquelle (Data source oder Vorgängerknoten) • Ausgabe des Knotens • Hierarchiestruktur: • NODE_ID, PARENT_NODE_ID, LEVEL • + weitere Strukturmerkmale • Knoten kann als Input für weitere Hierarchie- Funktion verwendet werden! Hierarchien ","Brandeis Consulting Hierarchy-Knoten - Modus Navigation Hierarchien • Modus: • Descendants: Unterknoten (direkt und indirekte) • Ancestors: Vorgängerknoten (Pfad zum Wurzelknoten) • Sibling: Knoten auf gleichem Level • Input: Zwei Datenquelle • Input 1: Hierarchie-Struktur (= Ausgabe von Hierarchieknoten im Modus Generation) • Input 2: (Gefilterte) Liste von Knoten • Muss Spalte HIERARCHY_RANK enthalten • Bsp.: Projektionsknoten mit festem Filter • Auch ohne Filterung verwendbar ","Brandeis Consulting Graph-Daten • Graph basiert auf gewöhnlichen HANA-Tabellen oder Views • Tabelle für Knoten (Vertex) • Tabelle für Kanten (Edges) • Definition des Graphs durch Graph workspace • Datei: Hdbgraphworkspace • Kanten (Verbindungen): edge table • source column: Spalte mit Startknoten der Verbindung • target column: Spalte mit Endknoten der Verbindung • Knoten: vertex table • Spalte für eindeutigen Schlüssel des Knotens Geodaten, Graphen, Zeitreihen ","Brandeis Consulting Graph-Daten – Calculation Views • Knoten Graph • Ein Knoten pro Calculation View • Graph-Knoten muss der unterste im Calculation View sein • Datenquelle: Graph workspace • Zugriff auf Graph-Funktionen: • Shortest Path, Neighborhood • Pattern Matching Geodaten, Graphen, Zeitreihen ","Brandeis Consulting Geodaten • Werden in normalen HANA-Tabellen verwaltet • Kodieren räumliche Informationen in zwei oder drei • Dimensionen • Eigener Spaltentyp: ST_GEOMETRY • Positionen (Punkte), • Formen (Kreise, Polygone), • Linien in zwei oder drei Dimensionen Geodaten, Graphen, Zeitreihen ","Brandeis Consulting Geodaten – Calculation Views • In berechneten Spalten: • Geofunktionen (Spatial functions) • Prädikate: Spatial predicates • JOIN zwischen Geodaten: Spatial Join Predicate • Beispiel: • Tabelle AIRPORT => Koordinaten von Flughäfen (JSON-Format) • Dimension View: Berechnet aus JSON-Format die Geoinformationen vom Typ ST_GEOMETRY, Längen- und Breitenangaben • Cube View: Distanzberechnung von Referenzpunkt und Sortierung nach Entfernung zu Flughafen Geodaten, Graphen, Zeitreihen ","Brandeis Consulting Fragen? ","Brandeis Consulting Space: Produktion Space: QA (Quality Assurance) HDI Container – Deployment – Beispiel- Landschaft Calculation Views - Grundlagen 19 Zentrales Git-Repository Container für fachlichen Test Container für Produktion Deployment Release Automatic Build Space: CI (Continuous Integration) Container für Integrationstest Vgl. P 136 - Commit von Entwicklungen "]